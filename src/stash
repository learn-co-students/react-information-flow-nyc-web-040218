import React, { Component } from 'react'
import { getRandomColor, getReducedColor } from './randomColorGenerator.js'
import Tier2 from './Tier2'


export default class Tier1 extends Component {

  constructor(props) {
    super(props)
    const initialColor = getRandomColor()
    const reducedColor = getReducedColor(initialColor)
    this.state = {
      color: initialColor,
      childColor: reducedColor,
      babyColor: getReducedColor(reducedColor)
    }
  }

  changeTierOneColor = () => {
    const randColor = getRandomColor()
    const reducedRandColor = getReducedColor(randColor)
    this.setState({
      color: randColor,
      childColor: reducedRandColor,
      babyColor: getReducedColor(reducedRandColor)
    }, () => {console.log('tierOne', this.state);})
  }

  changeTierTwoColor = () => {
    let newChildColor = getReducedColor(this.state.color)
    this.setState({
      childColor: newChildColor,
      babyColor: getReducedColor(newChildColor)
    }, () => {console.log('tierTwo', this.state);})
  }

  render() {
    // hard coded color values have been added below, though they won't be
    // present in our solution. What should they be replaced with?
    return (
      <div onClick={this.changeTierOneColor} className="tier1" style={{backgroundColor: this.state.color, color: this.state.color}}>
        <Tier2 changeTierTwoColor={this.changeTierTwoColor} color={this.state.childColor} childColor={this.state.babyColor} />
        <Tier2 changeTierTwoColor={this.changeTierTwoColor} color={this.state.childColor} childColor={this.state.babyColor} />
      </div>
    )
  }
}
